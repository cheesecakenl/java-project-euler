package nl.dev4all.problems;

import nl.dev4all.numbers.NumberUtil;

/**
 *
 * @author boy
 */
public class Problem_8 {

    /*
    Find the greatest product of five consecutive digits in the 1000-digit number.
    
    73167176531330624919225119674426574742355349194934
    96983520312774506326239578318016984801869478851843
    85861560789112949495459501737958331952853208805511
    12540698747158523863050715693290963295227443043557
    66896648950445244523161731856403098711121722383113
    62229893423380308135336276614282806444486645238749
    30358907296290491560440772390713810515859307960866
    70172427121883998797908792274921901699720888093776
    65727333001053367881220235421809751254540594752243
    52584907711670556013604839586446706324415722155397
    53697817977846174064955149290862569321978468622482
    83972241375657056057490261407972968652414535100474
    82166370484403199890008895243450658541227588666881
    16427171479924442928230863465674813919123162824586
    17866458359124566529476545682848912883142607690042
    24219022671055626321111109370544217506941658960408
    07198403850962455444362981230987879927244284909188
    84580156166097919133875499200524063689912560717606
    05886116467109405077541002256983155200055935729725
    71636269561882670428252483600823257530420752963450

    */
    public Problem_8() {

        NumberUtil numberUtil = new NumberUtil();

        String n = "73167176531330624919225119674426574742355349194934969835"
                + "2031277450632623957831801698480186947885184385861560789112949"
                + "4954595017379583319528532088055111254069874715852386305071569"
                + "3290963295227443043557668966489504452445231617318564030987111"
                + "2172238311362229893423380308135336276614282806444486645238749"
                + "3035890729629049156044077239071381051585930796086670172427121"
                + "8839987979087922749219016997208880937766572733300105336788122"
                + "0235421809751254540594752243525849077116705560136048395864467"
                + "0632441572215539753697817977846174064955149290862569321978468"
                + "6224828397224137565705605749026140797296865241453510047482166"
                + "3704844031998900088952434506585412275886668811642717147992444"
                + "2928230863465674813919123162824586178664583591245665294765456"
                + "8284891288314260769004224219022671055626321111109370544217506"
                + "9416589604080719840385096245544436298123098787992724428490918"
                + "8845801561660979191338754992005240636899125607176060588611646"
                + "7109405077541002256983155200055935729725716362695618826704282"
                + "52483600823257530420752963450";

        int answer = numberUtil.getLargestProductOfConsecutiveN(5, n);

        System.out.println(answer);
    }
}
